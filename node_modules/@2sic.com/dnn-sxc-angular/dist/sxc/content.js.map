{"version":3,"file":"content.js","sourceRoot":"","sources":["../../src/sxc/content.ts"],"names":[],"mappings":"AAKA,IAAA;IACE,iBACU,IAAgB,EAChB,WAAmB;QADnB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAQ;KACxB;IAIL,qBAAG,GAAH,UAAI,EAAiB;QAAjB,mBAAA,EAAA,SAAiB;QACnB,IAAI,GAAG,GAAG,sBAAoB,IAAI,CAAC,WAAa,CAAC;QACjD,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,GAAG,IAAI,MAAI,EAAI,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,GAAG,CAAC,CAAC;SAC9B;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;KAChC;IAED,sBAAI,GAAJ,UAAK,EAAU,EAAE,IAAS;QACxB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;kBAzBH;IA0BC,CAAA;AArBD,mBAqBC","sourcesContent":["import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport class Content<T> {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private contentType: string,\r\n  ) { }\r\n\r\n  get(): Observable<T[]>;\r\n  get(id: number): Observable<T>\r\n  get(id: number = null): Observable<T[]> | Observable<T> {\r\n    let url = `app/auto/content/${this.contentType}`;\r\n    if (id) {\r\n      url += `/${id}`;\r\n      return this.http.get<T>(url);\r\n    }\r\n\r\n    return this.http.get<T[]>(url);\r\n  }\r\n\r\n  post(id: number, data: any): Observable<T> {\r\n    throw new Error('not implemented yet');\r\n  }\r\n}\r\n"]}