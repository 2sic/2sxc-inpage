{"version":3,"file":"$quickE.config.js","sourceRoot":"","sources":["$quickE.config.ts"],"names":[],"mappings":"AAAA,CAAC,CAAC;IACE,IAAI,UAAU,GAAG,mBAAmB,CAAC;IAErC,4BAA4B;IAC5B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG;QACxB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE;YACT,MAAM,EAAE,IAAI,CAAI,uBAAuB;SAC1C;QACD,OAAO,EAAE;YACL,MAAM,EAAE,IAAI,CAAI,uBAAuB;SAC1C;KACJ,CAAC;IAEF,OAAO,CAAC,eAAe,GAAG;QACtB,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC,EAAE,WAAW,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;QAExE,8EAA8E;QAC9E,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEpE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,gEAAgE;YAChE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAC5C,IAAI,CAAC;oBACD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACjC,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACT,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;gBAC7C,CAAC;YACL,CAAC;YACD,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAChC,CAAC;QAED,4BAA4B;QAC5B,wJAAwJ;QACxJ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC;YAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC;QAEvG,oEAAoE;QACpE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,MAAM,CAAC;YAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC;IACtH,CAAC,CAAC;AAEN,CAAC,CAAC,CAAC","sourcesContent":["$(function () {\r\n    var configAttr = \"quick-edit-config\";\r\n\r\n    // the initial configuration\r\n    var conf = $quickE.config = {\r\n        enable: true,\r\n        innerBlocks: {\r\n            enable: null    // default: auto-detect\r\n        },\r\n        modules: {\r\n            enable: null    // default: auto-detect\r\n        }\r\n    };\r\n    \r\n    $quickE._readPageConfig = function () {\r\n        var configs = $(\"[\" + configAttr + \"]\"), finalConfig = {}, confJ, confO;\r\n\r\n        // any inner blocks found? will currently affect if modules can be inserted...\r\n        var hasInnerCBs = ($($quickE.selectors.cb.listSelector).length > 0);\r\n\r\n        if (configs.length > 0) {\r\n            // go through reverse list, as the last is the most important...\r\n            for (var c = configs.length; c >= 0; c--) {\r\n                confJ = configs[0].getAttribute(configAttr);\r\n                try {\r\n                    confO = JSON.parse(confJ);\r\n                    $.extend(finalConfig, confO);\r\n                } catch (e) {\r\n                    console.warn('had trouble with json', e);\r\n                }\r\n            }\r\n            $.extend(conf, finalConfig);\r\n        }\r\n\r\n        // re-check \"auto\" or \"null\"\r\n        // if it has inner-content, then it's probably a details page, where quickly adding modules would be a problem, so for now, disable modules in this case\r\n        if (conf.modules.enable === null || conf.modules.enable === 'auto') conf.modules.enable = !hasInnerCBs;\r\n\r\n        // for now, ContentBlocks are only enabled if they exist on the page\r\n        if (conf.innerBlocks.enable === null || conf.innerBlocks.enable === 'auto') conf.innerBlocks.enable = hasInnerCBs;  \r\n    };\r\n\r\n});"]}