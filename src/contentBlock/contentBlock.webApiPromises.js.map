{"version":3,"file":"contentBlock.webApiPromises.js","sourceRoot":"","sources":["contentBlock.webApiPromises.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AACH,CAAC;IAEG,IAAI,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC;IAE9B,yDAAyD;IACzD,+EAA+E;IAC/E,2FAA2F;IAC3F,+CAA+C;IAE/C;;;;;OAKG;IACH,6EAA6E;IAC7E,sDAAsD;IACtD,6BAA6B;IAC7B,qDAAqD;IACrD,kCAAkC;IAClC,SAAS;IACT,IAAI;IAEJ;;;;;;OAMG;IACH,GAAG,CAAC,YAAY,GAAG,UAAS,GAAG,EAAE,UAAU,EAAE,uBAAuB;QAChE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;YAClB,GAAG,EAAE,4BAA4B;YACjC,MAAM,EAAE;gBACJ,UAAU,EAAE,UAAU;gBACtB,uBAAuB,EAAE,uBAAuB;gBAChD,uBAAuB,EAAE,KAAK;aACjC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC;IAEF;;;;;OAKG;IACH,GAAG,CAAC,sBAAsB,GAAG,UAAS,GAAG,EAAE,UAAU;QACjD,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;QACjC,UAAU,GAAG,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,iCAAiC;QAChE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;YAClB,GAAG,EAAE,4BAA4B;YACjC,MAAM,EAAE;gBACJ,UAAU,EAAE,UAAU;gBACtB,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,OAAO;gBACzB,UAAU,EAAE,EAAE,CAAC,YAAY,CAAC,QAAQ;gBACpC,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,EAAE;gBACxB,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC;aAChE;YACD,QAAQ,EAAE,MAAM;SACnB,CAAC,CAAC;IACP,CAAC,CAAC;IACF,YAAY;AAGhB,CAAC,CAAC,EAAE,CAAC","sourcesContent":["/* \r\n * this is a content block in the browser\r\n * \r\n * A Content Block is a standalone unit of content, with it's own definition of\r\n * 1. content items\r\n * 2. template\r\n * + some other stuff\r\n *\r\n * it should be able to render itself\r\n */\r\n(function () {\r\n\r\n    var cbm = $2sxc._contentBlock;\r\n\r\n    //#region functions working only with what they are given\r\n    // 2017-08-27 2dm: I'm working on cleaning up this code, and an important part \r\n    // is to have code which doesn't use old state (like object-properties initialized earlier)\r\n    // extracting these methods is part of the work\r\n\r\n    /**\r\n     * TODO - unclear if still in use\r\n     * @param {object} sxc \r\n     * @param {boolean} state \r\n     * @returns {promise} \r\n     */\r\n    // 2017-09-02 2dm removed, deprecated, it's not stored on the server any more\r\n    //cbm.setTemplateChooserState = function(sxc, state) {\r\n    //    return sxc.webApi.get({\r\n    //        url: \"view/module/SetTemplateChooserState\",\r\n    //        params: { state: state }\r\n    //    });\r\n    //};\r\n\r\n    /**\r\n     * Save the template configuration for this instance\r\n     * @param {object} sxc \r\n     * @param {int} templateId \r\n     * @param {boolean} [forceCreateContentGroup]\r\n     * @returns {promise} \r\n     */\r\n    cbm.saveTemplate = function(sxc, templateId, forceCreateContentGroup) {\r\n        return sxc.webApi.get({\r\n            url: \"view/module/savetemplateid\",\r\n            params: {\r\n                templateId: templateId,\r\n                forceCreateContentGroup: forceCreateContentGroup,\r\n                newTemplateChooserState: false\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Retrieve the preview from the web-api\r\n     * @param {object} sxc \r\n     * @param {int} templateId \r\n     * @returns {promise} promise with the html in the result\r\n     */\r\n    cbm.getPreviewWithTemplate = function(sxc, templateId) {\r\n        var ec = sxc.manage._editContext;\r\n        templateId = templateId || -1; // fallback, meaning use saved ID\r\n        return sxc.webApi.get({\r\n            url: \"view/module/rendertemplate\",\r\n            params: {\r\n                templateId: templateId,\r\n                lang: ec.Language.Current,\r\n                cbisentity: ec.ContentBlock.IsEntity,\r\n                cbid: ec.ContentBlock.Id,\r\n                originalparameters: JSON.stringify(ec.Environment.parameters)\r\n            },\r\n            dataType: \"html\"\r\n        });\r\n    };\r\n    //#endregion\r\n\r\n\r\n})();"]}