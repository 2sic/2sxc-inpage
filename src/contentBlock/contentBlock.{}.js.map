{"version":3,"file":"contentBlock.{}.js","sourceRoot":"","sources":["contentBlock.{}.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AACH,CAAC;IAEG;;OAEG;IACH,KAAK,CAAC,aAAa,GAAG;QAElB,YAAY;QACZ,mBAAmB,EAAE,gBAAgB;QACrC,oBAAoB,EAAE,CAAC,CAAC;KAC3B,CAAC;AACN,CAAC,CAAC,EAAE,CAAC","sourcesContent":["/* \r\n * this is a content block in the browser\r\n * \r\n * A Content Block is a standalone unit of content, with it's own definition of\r\n * 1. content items\r\n * 2. template\r\n * + some other stuff\r\n *\r\n * it should be able to render itself\r\n * \r\n * Maybe ToDo 2cb:\r\n * 2sxc should have one entry point (interface to browser context) only.\r\n * Otherwise, we cannot know, when which part will be executed and debugging becomes very difficult.\r\n * \r\n */\r\n(function () {\r\n\r\n    /**\r\n     * The main content-block manager\r\n     */\r\n    $2sxc._contentBlock = {\r\n\r\n        // constants\r\n        cViewWithoutContent: '_LayoutElement', // needed to differentiate the \"select item\" from the \"empty-is-selected\" which are both empty\r\n        cUseExistingTemplate: -1\r\n    };\r\n})();"]}