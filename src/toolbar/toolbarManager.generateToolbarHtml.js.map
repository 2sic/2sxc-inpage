{"version":3,"file":"toolbarManager.generateToolbarHtml.js","sourceRoot":"","sources":["toolbarManager.generateToolbarHtml.ts"],"names":[],"mappings":"AAAA,CAAC;IACG,IAAI,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC;IACtC,KAAK,CAAC,eAAe,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IAChE,MAAM,CAAC;IAEP,6BAA6B,GAAG,EAAE,QAAQ,EAAE,YAAY;QACpD,gFAAgF;QAChF,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC,CAAC,sCAAsC;QACjE,IAAI,OAAO,GAAG,QAAQ,CAAC;QACvB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtF,OAAO,GAAG,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,gCAAgC,EAAG,QAAQ,CAAC,CAAC;QAEhH,0EAA0E;QAC1E,IAAI,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,eAAe,EAAG,YAAY,CAAC,CAAC;QAC5J,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9B,IAAI,gBAAgB,GAAG,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEvG,sDAAsD;QACtD,IAAI,SAAS,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,GAAG;YACvD,CAAC,CAAC,QAAQ,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;YACnD,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACnE,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,EAAE;YACtB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,4DAA4D;SAC1E,CAAC,CAAC;QAEH,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gBAChC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,CAAC;QAED,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAChC,CAAC;AACL,CAAC,CAAC,EAAE,CAAC","sourcesContent":["(function () {\r\n    var tbManager = $2sxc._toolbarManager;\r\n    $2sxc._toolbarManager.generateToolbarHtml = generateToolbarHtml;\r\n    return;\r\n\r\n    function generateToolbarHtml(sxc, tbConfig, moreSettings) {\r\n        // if it has an action or is an array, keep that. Otherwise get standard buttons\r\n        tbConfig = tbConfig || {}; // if null/undefined, use empty object\r\n        var btnList = tbConfig;\r\n        if (!tbConfig.action && !tbConfig.groups && !tbConfig.buttons && !Array.isArray(tbConfig))\r\n            btnList = tbManager.standardButtons(sxc.manage._user.canDesign /* editContext.User.CanDesign */ , tbConfig);\r\n\r\n        // whatever we had, if more settings were provided, override with these...\r\n        var tlbDef = tbManager.buttonHelpers.buildFullDefinition(btnList, sxc.manage._commands.commands, sxc.manage._instanceConfig /* tb.config */ , moreSettings);\r\n        var btnGroups = tlbDef.groups;\r\n        var behaviourClasses = \" sc-tb-hover-\" + tlbDef.settings.hover + \" sc-tb-show-\" + tlbDef.settings.show;\r\n\r\n        // todo: these settings assume it's not in an array...\r\n        var tbClasses = \"sc-menu group-0 \" + behaviourClasses + \" \" +\r\n            ((tbConfig.sortOrder === -1) ? \" listContent\" : \"\") +\r\n            (tlbDef.settings.classes ? \" \" + tlbDef.settings.classes : \"\");\r\n        var toolbar = $(\"<ul />\", {\r\n            'class': tbClasses,\r\n            'onclick': \"var e = arguments[0] || window.event; e.stopPropagation();\"\r\n        });\r\n\r\n        for (var i = 0; i < btnGroups.length; i++) {\r\n            var btns = btnGroups[i].buttons;\r\n            for (var h = 0; h < btns.length; h++)\r\n                toolbar.append($(\"<li />\").append($(tbManager.generateButtonHtml(sxc, btns[h], i))));\r\n        }\r\n\r\n        toolbar.attr(\"group-count\", btnGroups.length);\r\n        return toolbar[0].outerHTML;\r\n    }\r\n})();"]}