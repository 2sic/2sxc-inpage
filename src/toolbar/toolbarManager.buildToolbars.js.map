{"version":3,"file":"toolbarManager.buildToolbars.js","sourceRoot":"","sources":["toolbarManager.buildToolbars.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\r\n    // quick debug - set to false if not needed for production\r\n    var dbg = false;\r\n\r\n    // default / fallback settings for toolbars when nothings is specified\r\n    var settingsForEmptyToolbar = {\r\n        hover: 'left',\r\n        autoAddMore: 'left'\r\n    };\r\n\r\n    Object.assign($2sxc._toolbarManager, {\r\n        buildToolbars: buildToolbars,\r\n        disable: disable,\r\n        isDisabled: isDisabled\r\n    });\r\n\r\n    return;\r\n\r\n    // generate an empty / fallback toolbar tag\r\n    function generateFallbackToolbar() {\r\n        var settingsString = JSON.stringify(settingsForEmptyToolbar);\r\n        return $(\"<ul class='sc-menu' toolbar='' settings='\" + settingsString + \"'/>\");\r\n    }\r\n\r\n    // find current toolbars inside this wrapper-tag\r\n    function getToolbarTags(parentTag) {\r\n        var allInner = $(\".sc-menu[toolbar],.sc-menu[data-toolbar]\", parentTag);\r\n\r\n        // return only those, which don't belong to a sub-item\r\n        var res = allInner.filter(function (i, e) {\r\n            return $(e).closest(\".sc-content-block\")[0] === parentTag[0];\r\n        });\r\n        if (dbg) console.log(\"found toolbars for parent\", parentTag, res);\r\n        return res;\r\n    }\r\n\r\n    // create a process-toolbar command to generate toolbars inside a tag\r\n    function buildToolbars(parentTag, optionalId) {\r\n        parentTag = $(parentTag || \".DnnModule-\" + optionalId);\r\n\r\n        // if something says the toolbars are disabled, then skip\r\n        if (parentTag.attr($2sxc._toolbarManager.cDisableAttrName)) return;\r\n\r\n        // todo: change mechanism to not render toolbar, this uses a secret class name which the toolbar shouldn't know\r\n        // don't add, if it is has un-initialized content\r\n        // 2017-09-08 2dm disabled this, I believe the bootstrapping should never call this any more, if sc-uninitialized. if ok, then delete this in a few days\r\n        //var disableAutoAdd = $(\".sc-uninitialized\", parentTag).length !== 0;\r\n\r\n        var toolbars = getToolbarTags(parentTag);\r\n\r\n        // no toolbars found, must help a bit because otherwise editing is hard\r\n        if (toolbars.length === 0) { // && !disableAutoAdd) {\r\n            if (dbg) console.log(\"didn't find toolbar, so will auto-create\", parentTag);\r\n\r\n            var outsideCb = !parentTag.hasClass($2sxc.c.cls.scCb); // \"sc-content-block\");\r\n            var contentTag = outsideCb ? parentTag.find(\"div.sc-content-block\") : parentTag;\r\n            contentTag.addClass($2sxc.c.cls.scElm); // \"sc-element\");\r\n\r\n            contentTag.prepend(generateFallbackToolbar());\r\n            toolbars = getToolbarTags(parentTag);\r\n        }\r\n\r\n        toolbars.each(function initToolbar() {\r\n            var tag = $(this),\r\n                data = null,\r\n                toolbarConfig, toolbarSettings, at = $2sxc.c.attr;\r\n\r\n            try {\r\n                data = tag.attr(at.toolbar) || tag.attr(at.toolbarData) || \"{}\";\r\n                toolbarConfig = JSON.parse(data);\r\n                data = tag.attr(at.settings) || tag.attr(at.settingsData) || \"{}\";\r\n                toolbarSettings = JSON.parse(data);\r\n                if (toolbarConfig === {} && toolbarSettings === {})\r\n                    toolbarSettings = settingsForEmptyToolbar;\r\n            } catch (err) {\r\n                console\r\n                    .error(\"error in settings JSON - probably invalid - make sure you also quote your properties like \\\"name\\\": ...\", data, err);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                tag.replaceWith($2sxc(tag).manage.getToolbar(toolbarConfig, toolbarSettings));\r\n            } catch (err2) {\r\n                // note: errors happen a lot on custom toolbars, amke sure the others are still rendered\r\n                console.error(\"error creating toolbar - will skip this one\", err2);\r\n            }\r\n        });\r\n    }\r\n    \r\n    function disable(tag) {\r\n        tag = $(tag);\r\n        tag.attr($2sxc._toolbarManager.cDisableAttrName, true);\r\n    }\r\n\r\n    function isDisabled(sxc) {\r\n        var tag = $($2sxc._manage.getTag(sxc));\r\n        return !!tag.attr($2sxc._toolbarManager.cDisableAttrName);\r\n    }\r\n})();"]}