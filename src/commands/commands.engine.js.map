{"version":3,"file":"commands.engine.js","sourceRoot":"","sources":["commands.engine.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\r\n    $2sxc._commands.instanceEngine = function (sxc, editContext) {\r\n        var engine = {\r\n            commands: $2sxc._commands.initializeInstanceCommands(editContext),\r\n\r\n            // assemble an object which will store the configuration and execute it\r\n            create: function (specialSettings) {\r\n                var settings = $2sxc._lib.extend({}, sxc.manage._instanceConfig, specialSettings); // merge button with general toolbar-settings\r\n                var ngDialogUrl = sxc.manage._editContext.Environment.SxcRootUrl +\r\n                    \"desktopmodules/tosic_sexycontent/dist/dnn/ui.html?sxcver=\" +\r\n                    sxc.manage._editContext.Environment.SxcVersion;\r\n                var isDebug = $2sxc.urlParams.get(\"debug\") ? \"&debug=true\" : \"\";\r\n\r\n                var cmd = {\r\n                    settings: settings,\r\n                    items: settings.items || [], // use predefined or create empty array\r\n                    params: $2sxc._lib.extend({\r\n                        dialog: settings.dialog || settings.action // the variable used to name the dialog changed in the history of 2sxc from action to dialog\r\n                    }, settings.params),\r\n\r\n                    addSimpleItem: function () {\r\n                        let item = {} as Item;\r\n                        let ct = cmd.settings.contentType || cmd.settings.attributeSetName; // two ways to name the content-type-name this, v 7.2+ and older\r\n                        if (cmd.settings.entityId) item.EntityId = cmd.settings.entityId;\r\n                        if (ct) item.ContentTypeName = ct;\r\n\r\n                        // only add if there was stuff to add\r\n                        if (item.EntityId || item.ContentTypeName) cmd.items.push(item);\r\n                    },\r\n\r\n                    // this adds an item of the content-group, based on the group GUID and the sequence number\r\n                    addContentGroupItem: function (guid, index, part, isAdd, isEntity, cbid, sectionLanguageKey) {\r\n                        cmd.items.push({\r\n                            Group: {\r\n                                Guid: guid,\r\n                                Index: index,\r\n                                Part: part,\r\n                                Add: isAdd\r\n                            },\r\n                            Title: $2sxc.translate(sectionLanguageKey)\r\n                        });\r\n                    },\r\n\r\n                    // this will tell the command to edit a item from the sorted list in the group, optionally together with the presentation item\r\n                    addContentGroupItemSetsToEditList: function (withPresentation) {\r\n                        var isContentAndNotHeader = (cmd.settings.sortOrder !== -1),\r\n                            index = isContentAndNotHeader ? cmd.settings.sortOrder : 0,\r\n                            prefix = isContentAndNotHeader ? \"\" : \"List\",\r\n                            cTerm = prefix + \"Content\",\r\n                            pTerm = prefix + \"Presentation\",\r\n                            isAdd = cmd.settings.action === \"new\",\r\n                            groupId = cmd.settings.contentGroupId;\r\n                        cmd.addContentGroupItem(groupId, index, cTerm.toLowerCase(), isAdd, cmd.settings.cbIsEntity, cmd.settings.cbId, \"EditFormTitle.\" + cTerm);\r\n\r\n                        if (withPresentation) cmd.addContentGroupItem(groupId, index, pTerm.toLowerCase(), isAdd, cmd.settings.cbIsEntity, cmd.settings.cbId, \"EditFormTitle.\" + pTerm);\r\n                    },\r\n\r\n                    // build the link, combining specific params with global ones and put all in the url\r\n                    generateLink: function () {\r\n                        // if there is no items-array, create an empty one (it's required later on)\r\n                        if (!cmd.settings.items) cmd.settings.items = [];\r\n                        //#region steps for all actions: prefill, serialize, open-dialog\r\n                        // when doing new, there may be a prefill in the link to initialize the new item\r\n                        if (cmd.settings.prefill) {\r\n                            for (var i = 0; i < cmd.items.length; i++) {\r\n                                cmd.items[i].Prefill = cmd.settings.prefill;\r\n                            }\r\n                        }\r\n                        cmd.params.items = JSON.stringify(cmd.items); // Serialize/json-ify the complex items-list\r\n\r\n                        // clone the params and adjust parts based on partOfPage settings...\r\n                        var sharedParams = $2sxc._lib.extend({}, sxc.manage._dialogParameters);\r\n                        if (!cmd.settings.partOfPage) {\r\n                            delete sharedParams.versioningRequirements;\r\n                            delete sharedParams.publishing;\r\n                            sharedParams.partOfPage = false;\r\n                        }\r\n\r\n                        return ngDialogUrl +\r\n                            \"#\" + $.param(sharedParams) +\r\n                            \"&\" + $.param(cmd.params) +\r\n                            isDebug;\r\n                        //#endregion\r\n                    }\r\n                };\r\n                return cmd;\r\n            },\r\n\r\n            // create a dialog link\r\n            _linkToNgDialog: function (specialSettings) {\r\n                var cmd = sxc.manage._commands.create(specialSettings);\r\n\r\n                if (cmd.settings.useModuleList) cmd.addContentGroupItemSetsToEditList(true);\r\n                else cmd.addSimpleItem();\r\n\r\n                // if the command has own configuration stuff, do that now\r\n                if (cmd.settings.configureCommand) cmd.settings.configureCommand(cmd);\r\n\r\n                return cmd.generateLink();\r\n            },\r\n\r\n            // open a new dialog of the angular-ui\r\n            _openNgDialog: function (settings, event, sxc /*, closeCallback*/) {\r\n                // the callback will handle events after closing the dialog\r\n                // and reload the in-page view w/ajax or page reload\r\n                var callback = function () {\r\n                    $2sxc._contentBlock.reloadAndReInitialize(sxc);\r\n                    // 2017-09-29 2dm: no call of _openNgDialog seems to give a callback ATM closeCallback();\r\n                };\r\n                var link = engine._linkToNgDialog(settings); // the link contains everything to open a full dialog (lots of params added)\r\n                if (settings.inlineWindow)\r\n                    return $2sxc._quickDialog.showOrToggle(sxc, link, callback, settings.fullScreen /* settings.dialog === \"item-history\"*/ , settings.dialog);\r\n                if (settings.newWindow || (event && event.shiftKey))\r\n                    return window.open(link);\r\n                return $2sxc.totalPopup.open(link, callback);\r\n            },\r\n\r\n            // ToDo: remove dead code\r\n            executeAction: function (nameOrSettings, settings, event) {\r\n\r\n                // cycle parameters, in case it was called with 2 params only\r\n                if (!event && settings && typeof settings.altKey !== \"undefined\") { // no event param, but settings contains the event-object\r\n                    event = settings; // move it to the correct variable\r\n                    settings = {}; // clear the settings variable, as none was provided\r\n                }\r\n\r\n                // pre-save event because afterwards we have a promise, so the event-object changes; funky syntax is because of browser differences\r\n                var origEvent = event || window.event;\r\n\r\n                // check if name is name (string) or object (settings)\r\n                settings = (typeof nameOrSettings === \"string\") ?\r\n                    $2sxc._lib.extend(settings || {}, {\r\n                        \"action\": nameOrSettings\r\n                    }) // place the name as an action-name into a command-object\r\n                    :\r\n                    nameOrSettings;\r\n\r\n                var conf = engine.commands[settings.action];\r\n                settings = $2sxc._lib.extend({}, conf, settings); // merge conf & settings, but settings has higher priority\r\n\r\n                if (!settings.dialog) settings.dialog = settings.action; // old code uses \"action\" as the parameter, now use verb ? dialog\r\n                if (!settings.code) settings.code = engine._openNgDialog; // decide what action to perform\r\n\r\n                if (conf.uiActionOnly) return settings.code(settings, origEvent, sxc);\r\n\r\n                // if more than just a UI-action, then it needs to be sure the content-group is created first\r\n                return $2sxc._contentBlock.prepareToAddContent(sxc, settings.useModuleList)\r\n                    .then(function () {\r\n                        return settings.code(settings, origEvent, sxc);\r\n                    });\r\n            }\r\n        };\r\n\r\n        return engine;\r\n    };\r\n})();"]}