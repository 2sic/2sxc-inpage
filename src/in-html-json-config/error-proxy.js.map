{"version":3,"file":"error-proxy.js","sourceRoot":"","sources":["error-proxy.ts"],"names":[],"mappings":";;AAAA,2CAAwG;AACxG,iCAAgC;AAEhC;IAAA;IAgBA,CAAC;IAfe,gBAAK,GAAnB,UAAoB,IAAY;QAC9B,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEa,iBAAM,GAApB,UAAqB,IAAS,EAAE,KAAsB;QAAtB,sBAAA,EAAA,cAAsB;QACpD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,KAAK,GAAG,MAAM,CAAC;QACjB,CAAC;QAED,sBAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEvB,wBAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,GAAG,OAAO,CAAC,CAAC;QAE9C,MAAM,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IACH,iBAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,gCAAU","sourcesContent":["import { checkData, checkArray, checkNumber, checkBoolean, checkString, checkNull } from './ihj-helper';\r\nimport { Error } from './error';\r\n\r\nexport class ErrorProxy {\r\n  public static Parse(data: string): Error {\r\n    return ErrorProxy.Create(JSON.parse(data));\r\n  }\r\n\r\n  public static Create(data: any, field: string = 'root'): Error {\r\n    if (!field) {\r\n      field = \"root\";\r\n    }\r\n\r\n    checkData(data, field);\r\n\r\n    checkString(data.type, true, field + \".type\");\r\n\r\n    return new Error(data);\r\n  }\r\n}"]}